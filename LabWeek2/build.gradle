plugins {
    id 'java'
    id 'war'
}

group 'vn.edu.iuh.fit.thanhtuyen'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.annotationProcessorPath = configurations.annotationProcessor
}

dependencies {
    //for convert type in rest
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
    compileOnly('jakarta.platform:jakarta.jakartaee-api:10.0.0')
    implementation('org.glassfish.jaxb:jaxb-runtime:4.0.3')
    implementation('org.jboss.weld.se:weld-se-core:5.1.2.Final')
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    //  implementation 'org.mariadb.jdbc:mariadb-java-client:3.4.1'
    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.0.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.0.Final'
    implementation 'jakarta.enterprise:jakarta.enterprise.cdi-api:4.0.1'
    compileOnly('jakarta.servlet:jakarta.servlet-api:6.0.0')
    // JSP
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:2.0.0'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:2.0.0'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}